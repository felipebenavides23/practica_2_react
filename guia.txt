inciar el proyecto de node.js

npm init -y

instalacion de react y reactDOM

npm install  --save react react-reactDOM

instalacion de dabel

npm install --save-dev @babel/core @babel/preset-env @babel/preset-react babel-loader --save -dev

instalacion de webpack

npm install webpack webpack-cli html-webpack-plugin html-loader --save-dev


solucion de error

npm cache clean --force

par la instalacion de  webpack server 

npm install webpack-dev-server --save-dev

para la intalacion de sass
npm install --save-dev mini-css-extract-plugin css-loader node-sass sass-loader --save-dev

para la instalacion de eslint

npm install eslint babel-eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-react eslint-plugin-jsx-a11y --save-dev

para iniciar eslint 

npx eslint --init

para descargar el render de imagenes 

npm install file-loader --save-dev


para  instalacion de json server

forma 1:
 npm install json-server -g
forma 2:
sudo npm install json-server -g

instalacion de propTypes

npm install prop-types

llamado de una API

//   forma 2 de hacer un llamada de api en react con async/await
//   const [videos , setVideos] = useState([])
//   useEffect(() => {
//       const fetchVideos = async () => {
//         try {
//           const response = await fetch("http:localhost:3000/initialState");
//           const data = await response.json();
//           return setVideos(data);
//         } catch {
//           console.log(error);
//         }
//       };
//       fetchVideos();
//     }, []);

//     console.log(videos)


  const[video , setVideo] = useState([])

    useEffect(()=>{
        fetch('http://localhost:3000/initialState')
        .then(response => response.json)
        .then(data => setVideo(data))
    },[]);

    console.log(video)